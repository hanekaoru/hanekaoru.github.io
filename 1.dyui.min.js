webpackJsonpdyui([1],{464:function(t,e,n){"use strict";function a(t){n(536)}Object.defineProperty(e,"__esModule",{value:!0});var i=n(484),r=n(538),s=n(0),p=a,l=s(i.a,r.a,!1,p,null,null);e.default=l.exports},484:function(t,e,n){"use strict";e.a={data:function(){return{}}}},536:function(t,e,n){var a=n(537);"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);n(106)("2f239e5f",a,!0)},537:function(t,e,n){e=t.exports=n(29)(!1),e.push([t.i,"\n.tab-wrapper {\n  padding: 10px 25px 5px;\n  border-top: 1px solid #d7dde4;\n}\n.tab-wrapper .tab-content {\n    margin-top: 15px;\n    margin-bottom: 20px;\n}\n.tab-wrapper .tab-content .h2 {\n      font-size: 16px;\n      font-weight: normal;\n      margin: 20px 0;\n      font-weight: 600;\n}\n.tab-wrapper .components-code {\n    font-size: 14px;\n}\n.tab-wrapper .components-code .code-title {\n      font-size: 14px;\n      margin-bottom: 15px;\n}\n.tab-wrapper .code-tip {\n    display: block;\n    padding: .5em;\n    background: #23241f;\n    color: #fff;\n    font-size: 14px;\n    text-indent: 10px;\n    padding: 10px 0;\n}\n.tab-wrapper .code-tip code {\n      color: #9CDCFE;\n}\n.tab-wrapper .code-tip p {\n      margin: 5px;\n}\n",""])},538:function(t,e,n){"use strict";var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"components-box"},[n("div",{staticClass:"components-title"},[t._v("Tab 选项卡")]),t._v(" "),n("div",{staticClass:"tab-wrapper"},[n("ul",[n("li",[n("div",{staticClass:"tab-content"},[n("h2",{staticClass:"h2"},[t._v("Tab 选项卡")]),t._v(" "),n("dy-tab",[n("dy-tab-list",{attrs:{label:"渲染函数"}},[n("p",[t._v("Vue 推荐在绝大多数情况下使用 template 来创建你的 HTML。然而在一些场景中，你真的需要 JavaScript 的完全编程的能力，这就是 render 函数，它比 template 更接近编译器。")])]),t._v(" "),n("dy-tab-list",{attrs:{label:"虚拟 DOM"}},[n("p",[t._v("createElement 到底会返回什么呢？其实不是一个实际的 DOM 元素。它更准确的名字可能是 createNodeDescription，因为它所包含的信息会告诉 Vue 页面上需要渲染什么样的节点，及其子节点。")])]),t._v(" "),n("dy-tab-list",{attrs:{label:"深入 data 对象"}},[n("p",[t._v("有一件事要注意：正如在模板语法中，v-bind:class 和 v-bind:style ，会被特别对待一样，在 VNode 数据对象中，下列属性名是级别最高的字段。该对象也允许你绑定普通的 HTML 特性，就像 DOM 属性一样，比如 innerHTML (这会取代 v-html 指令)。")])])],1)],1),t._v(" "),t._m(0),t._v(" "),n("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[t._v("\r\n    "),n("code",{staticClass:"html"},[t._v('\r\n    <template>\r\n        \r\n        <dy-tab>\r\n            <dy-tab-list label="渲染函数">\r\n                <p>Vue 推荐在绝大多数情况下使用 template 来创建你的 HTML。然而在一些场景中，你真的需要 JavaScript 的完全编程的能力，这就是 render 函数，它比 template 更接近编译器。</p>\r\n            </dy-tab-list>\r\n            <dy-tab-list label="虚拟 DOM">\r\n                <p>createElement 到底会返回什么呢？其实不是一个实际的 DOM 元素。它更准确的名字可能是 createNodeDescription，因为它所包含的信息会告诉 Vue 页面上需要渲染什么样的节点，及其子节点。</p>\r\n            </dy-tab-list>\r\n            <dy-tab-list label="深入 data 对象">\r\n                <p>有一件事要注意：正如在模板语法中，v-bind:class 和 v-bind:style ，会被特别对待一样，在 VNode 数据对象中，下列属性名是级别最高的字段。该对象也允许你绑定普通的 HTML 特性，就像 DOM 属性一样，比如 innerHTML (这会取代 v-html 指令)。</p>\r\n            </dy-tab-list>\r\n        </dy-tab>\r\n\r\n    </template>\r\n    ')]),t._v("\r\n")])])])]),t._v(" "),n("div",{staticStyle:{height:"500px"}})])},i=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"components-code"},[n("div",{staticClass:"code-title"},[t._v("示例代码")]),t._v(" "),n("div",{staticClass:"code-tip"},[n("p",[t._v("直接使用 "),n("code",[t._v("dy-tab")]),t._v(" 组件包裹 "),n("code",[t._v("dy-tab-list")]),t._v(" 组件即可")]),t._v(" "),n("p",[t._v("指定的 "),n("code",[t._v("label")]),t._v(" 为导航的文本内容，"),n("code",[t._v("dy-tab-list")]),t._v(" 当中的内容可以自行定义")]),t._v(" "),n("br"),t._v(" "),n("p",[t._v("相关参数设置如下：")]),t._v(" "),n("p",[n("code",[t._v("label")]),t._v(" -- 对应渲染生成的选项卡标题的文本内容")])])])}],r={render:a,staticRenderFns:i};e.a=r}});